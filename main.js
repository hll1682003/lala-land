(()=>{"use strict";var e,t,n,r,o,a={"./src/index.tsx":(e,t,n)=>{var r=n("./node_modules/react/index.js"),o=n("./node_modules/@mui/material/styles/ThemeProvider.js"),a=n("./node_modules/react-dom/client.js"),l=n("./node_modules/@mui/material/Checkbox/Checkbox.js"),i=n("./node_modules/@mui/material/styles/styled.js"),u=n("./node_modules/@mui/material/styles/createTheme.js"),s=((0,i.Ay)(l.A)((function(e){var t=e.theme;return{color:t.status.danger,"&.Mui-checked":{color:t.status.danger}}})),(0,u.A)({palette:{primary:{main:"#cffdff"},secondary:{main:"#001c43"}}})),m=n("./node_modules/react-router-dom/dist/index.js"),c=n("./node_modules/react-router/dist/index.js"),d=n("./node_modules/@mui/material/Box/Box.js"),p=n("./node_modules/@mui/material/IconButton/IconButton.js"),f=n("./node_modules/@mui/material/Menu/Menu.js"),v=n("./node_modules/@mui/icons-material/Menu.js"),y=n("./node_modules/@mui/material/Button/Button.js"),b=n("./node_modules/@mui/material/MenuItem/MenuItem.js"),g=n("./node_modules/@mui/material/AppBar/AppBar.js");const h=n.p+"66ab77d47d3c81f5b5cf.svg";var k=n("./node_modules/@mui/material/Toolbar/Toolbar.js"),j=(0,i.Ay)("div")((function(e){var t,n=e.theme;return(t={padding:n.spacing(1),"& button":{color:n.palette.secondary.main}})[n.breakpoints.down("md")]={display:"grid",gridTemplateAreas:"'hamburger logo logo'"},t[n.breakpoints.up("md")]={display:"grid",gridTemplateAreas:"'logo logo logo'\n                        ' .  menulinks  . '"},t})),x=(0,i.Ay)("div")((function(e){var t,n=e.theme;return(t={gridArea:"logo"})[n.breakpoints.down("md")]={display:"none"},t[n.breakpoints.up("md")]={height:"5rem",width:"20rem",backgroundColor:n.palette.secondary.main,mask:"url('".concat(h,"') no-repeat center"),maskSize:"20rem",gridArea:"logo",justifySelf:"center"},t})),E=(0,i.Ay)(g.A)((function(e){return e.theme,{position:"relative"}})),A=(0,i.Ay)(k.A)((function(e){var t,n=e.theme;return(t={display:"flex"})[n.breakpoints.down("md")]={"&:before":{content:"''",backgroundColor:n.palette.secondary.main,mask:"url('".concat(h,"') no-repeat center"),maskSize:"10rem",justifyContent:"start",width:"10rem",height:"100%",position:"absolute",left:"calc(50vw - 5rem)"}},t[n.breakpoints.up("md")]={justifyContent:"center"},t})),_=function(){return r.createElement(x,null)},C={home:{value:"home",displayName:"Home"},aboutUs:{value:"about",displayName:"About Us"},workFlow:{value:"workflow",displayName:"Service Map"},catalog:{value:"catalog",displayName:"Product Catalog"}},w=n("./node_modules/@emotion/react/dist/emotion-element-5486c51c.browser.esm.js"),O=Object.values(C);function S(){var e=r.useState(null),t=e[0],n=e[1],o=r.useState(null),a=(o[0],o[1],function(){n(null)}),l=(0,w.u)();return r.createElement(E,null,r.createElement(A,{disableGutters:!0},r.createElement(j,null,r.createElement(_,null),r.createElement(d.A,{sx:{flexGrow:0,display:{sm:"flex",md:"none",lg:"none"},gridArea:{md:"hamburger"}}},r.createElement(p.A,{size:"large","aria-label":"account of current user","aria-controls":"menu-appbar","aria-haspopup":"true",onClick:function(e){n(e.currentTarget)},color:"secondary"},r.createElement(v.A,null)),r.createElement(f.A,{id:"menu-appbar",anchorEl:t,anchorOrigin:{vertical:"bottom",horizontal:"left"},keepMounted:!0,transformOrigin:{vertical:"top",horizontal:"left"},open:Boolean(t),onClose:a,sx:{display:{md:"block",lg:"none"}}},O.map((function(e){return r.createElement(b.A,{key:e.value,onClick:a},r.createElement(y.A,{component:m.k2,to:e.value,key:e.value,onClick:a,sx:{my:2,color:l.palette.secondary.main,display:"block"}},e.displayName))})))),r.createElement(d.A,{sx:{flexGrow:1,display:{xs:"none",md:"flex",lg:"flex",justifyContent:"center"},gridArea:"menulinks"}},O.map((function(e){return r.createElement(y.A,{component:m.k2,to:e.value,key:e.value,onClick:a,sx:{my:2,color:l.palette.secondary.main,display:"block"}},e.displayName)}))))))}const M=function(){return r.createElement(r.Suspense,{fallback:"loading"},r.createElement("div",{style:{display:"flex"}},r.createElement(c.sv,null)))};var B=(0,m.Ys)([{path:"/",element:r.createElement((function(){return r.createElement("div",{style:{display:"flex",flexDirection:"column",alignItems:"center"}},r.createElement(S,null),r.createElement(r.Suspense,{fallback:"loading..."},r.createElement(M,null)))}),null),children:[{index:!0,element:r.createElement(c.C5,{to:C.home.value,replace:!0})},{path:C.aboutUs.value,Component:(0,r.lazy)((function(){return n.e(616).then(n.bind(n,"./src/pages/About/About.tsx"))}))},{path:C.home.value,element:r.createElement(c.C5,{to:C.home.value,replace:!0}),Component:(0,r.lazy)((function(){return n.e(410).then(n.bind(n,"./src/pages/Home/Home.tsx"))})),index:!0},{path:C.workFlow.value,Component:(0,r.lazy)((function(){return n.e(677).then(n.bind(n,"./src/pages/WorkFlow/WorkFlow.tsx"))}))},{path:C.catalog.value,Component:(0,r.lazy)((function(){return Promise.all([n.e(143),n.e(596)]).then(n.bind(n,"./src/pages/Catalog/Catalog.tsx"))}))},{path:"*",element:r.createElement(c.C5,{to:C.home.value,replace:!0})}]}]),P=n("./node_modules/@mui/material/CssBaseline/CssBaseline.js"),T=document.querySelector("#root");(0,a.H)(T).render(r.createElement(r.StrictMode,null,r.createElement(o.A,{theme:s},r.createElement(P.Ay,null),r.createElement(m.pg,{router:B}))))}},l={};function i(e){var t=l[e];if(void 0!==t)return t.exports;var n=l[e]={exports:{}};return a[e].call(n.exports,n,n.exports,i),n.exports}i.m=a,e=[],i.O=(t,n,r,o)=>{if(!n){var a=1/0;for(m=0;m<e.length;m++){for(var[n,r,o]=e[m],l=!0,u=0;u<n.length;u++)(!1&o||a>=o)&&Object.keys(i.O).every((e=>i.O[e](n[u])))?n.splice(u--,1):(l=!1,o<a&&(a=o));if(l){e.splice(m--,1);var s=r();void 0!==s&&(t=s)}}return t}o=o||0;for(var m=e.length;m>0&&e[m-1][2]>o;m--)e[m]=e[m-1];e[m]=[n,r,o]},i.n=e=>{var t=e&&e.__esModule?()=>e.default:()=>e;return i.d(t,{a:t}),t},n=Object.getPrototypeOf?e=>Object.getPrototypeOf(e):e=>e.__proto__,i.t=function(e,r){if(1&r&&(e=this(e)),8&r)return e;if("object"==typeof e&&e){if(4&r&&e.__esModule)return e;if(16&r&&"function"==typeof e.then)return e}var o=Object.create(null);i.r(o);var a={};t=t||[null,n({}),n([]),n(n)];for(var l=2&r&&e;"object"==typeof l&&!~t.indexOf(l);l=n(l))Object.getOwnPropertyNames(l).forEach((t=>a[t]=()=>e[t]));return a.default=()=>e,i.d(o,a),o},i.d=(e,t)=>{for(var n in t)i.o(t,n)&&!i.o(e,n)&&Object.defineProperty(e,n,{enumerable:!0,get:t[n]})},i.f={},i.e=e=>Promise.all(Object.keys(i.f).reduce(((t,n)=>(i.f[n](e,t),t)),[])),i.u=e=>e+".js",i.miniCssF=e=>{},i.o=(e,t)=>Object.prototype.hasOwnProperty.call(e,t),r={},o="lala-land-frontend:",i.l=(e,t,n,a)=>{if(r[e])r[e].push(t);else{var l,u;if(void 0!==n)for(var s=document.getElementsByTagName("script"),m=0;m<s.length;m++){var c=s[m];if(c.getAttribute("src")==e||c.getAttribute("data-webpack")==o+n){l=c;break}}l||(u=!0,(l=document.createElement("script")).charset="utf-8",l.timeout=120,i.nc&&l.setAttribute("nonce",i.nc),l.setAttribute("data-webpack",o+n),l.src=e),r[e]=[t];var d=(t,n)=>{l.onerror=l.onload=null,clearTimeout(p);var o=r[e];if(delete r[e],l.parentNode&&l.parentNode.removeChild(l),o&&o.forEach((e=>e(n))),t)return t(n)},p=setTimeout(d.bind(null,void 0,{type:"timeout",target:l}),12e4);l.onerror=d.bind(null,l.onerror),l.onload=d.bind(null,l.onload),u&&document.head.appendChild(l)}},i.r=e=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},i.p="/lala-land",(()=>{var e={792:0};i.f.j=(t,n)=>{var r=i.o(e,t)?e[t]:void 0;if(0!==r)if(r)n.push(r[2]);else{var o=new Promise(((n,o)=>r=e[t]=[n,o]));n.push(r[2]=o);var a=i.p+i.u(t),l=new Error;i.l(a,(n=>{if(i.o(e,t)&&(0!==(r=e[t])&&(e[t]=void 0),r)){var o=n&&("load"===n.type?"missing":n.type),a=n&&n.target&&n.target.src;l.message="Loading chunk "+t+" failed.\n("+o+": "+a+")",l.name="ChunkLoadError",l.type=o,l.request=a,r[1](l)}}),"chunk-"+t,t)}},i.O.j=t=>0===e[t];var t=(t,n)=>{var r,o,[a,l,u]=n,s=0;if(a.some((t=>0!==e[t]))){for(r in l)i.o(l,r)&&(i.m[r]=l[r]);if(u)var m=u(i)}for(t&&t(n);s<a.length;s++)o=a[s],i.o(e,o)&&e[o]&&e[o][0](),e[o]=0;return i.O(m)},n=self.webpackChunklala_land_frontend=self.webpackChunklala_land_frontend||[];n.forEach(t.bind(null,0)),n.push=t.bind(null,n.push.bind(n))})();var u=i.O(void 0,[515],(()=>i("./src/index.tsx")));u=i.O(u)})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,