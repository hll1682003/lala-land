(()=>{"use strict";var e,t,o,a,n,r={"./src/index.tsx":(e,t,o)=>{var a=o("./node_modules/.pnpm/react@18.3.1/node_modules/react/index.js"),n=o("./node_modules/.pnpm/@mui+material@5.16.4_@emotion+react@11.13.0_@types+react@18.3.3_react@18.3.1__@emotion+styled_brxipnv4yvqheosgxcawdxdyay/node_modules/@mui/material/styles/ThemeProvider.js"),r=o("./node_modules/.pnpm/react-dom@18.3.1_react@18.3.1/node_modules/react-dom/client.js"),l=o("./node_modules/.pnpm/@mui+material@5.16.4_@emotion+react@11.13.0_@types+react@18.3.3_react@18.3.1__@emotion+styled_brxipnv4yvqheosgxcawdxdyay/node_modules/@mui/material/Checkbox/Checkbox.js"),i=o("./node_modules/.pnpm/@mui+material@5.16.4_@emotion+react@11.13.0_@types+react@18.3.3_react@18.3.1__@emotion+styled_brxipnv4yvqheosgxcawdxdyay/node_modules/@mui/material/styles/styled.js"),m=o("./node_modules/.pnpm/@mui+material@5.16.4_@emotion+react@11.13.0_@types+react@18.3.3_react@18.3.1__@emotion+styled_brxipnv4yvqheosgxcawdxdyay/node_modules/@mui/material/styles/createTheme.js"),s=((0,i.Ay)(l.A)((function(e){var t=e.theme;return{color:t.status.danger,"&.Mui-checked":{color:t.status.danger}}})),(0,m.A)({palette:{primary:{main:"#cffdff"},secondary:{main:"#001c43"}}})),d=o("./node_modules/.pnpm/react-router-dom@6.25.1_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/react-router-dom/dist/index.js"),c=o("./node_modules/.pnpm/react-router@6.25.1_react@18.3.1/node_modules/react-router/dist/index.js"),u=o("./node_modules/.pnpm/@mui+material@5.16.4_@emotion+react@11.13.0_@types+react@18.3.3_react@18.3.1__@emotion+styled_brxipnv4yvqheosgxcawdxdyay/node_modules/@mui/material/Box/Box.js"),p=o("./node_modules/.pnpm/@mui+material@5.16.4_@emotion+react@11.13.0_@types+react@18.3.3_react@18.3.1__@emotion+styled_brxipnv4yvqheosgxcawdxdyay/node_modules/@mui/material/IconButton/IconButton.js"),y=o("./node_modules/.pnpm/@mui+material@5.16.4_@emotion+react@11.13.0_@types+react@18.3.3_react@18.3.1__@emotion+styled_brxipnv4yvqheosgxcawdxdyay/node_modules/@mui/material/Menu/Menu.js"),_=o("./node_modules/.pnpm/@mui+icons-material@5.16.4_@mui+material@5.16.4_@emotion+react@11.13.0_@types+react@18.3.3_re_nbdaqwfqqipzti35upcsmwmgry/node_modules/@mui/icons-material/Menu.js"),f=o("./node_modules/.pnpm/@mui+material@5.16.4_@emotion+react@11.13.0_@types+react@18.3.3_react@18.3.1__@emotion+styled_brxipnv4yvqheosgxcawdxdyay/node_modules/@mui/material/Button/Button.js"),v=o("./node_modules/.pnpm/@mui+material@5.16.4_@emotion+react@11.13.0_@types+react@18.3.3_react@18.3.1__@emotion+styled_brxipnv4yvqheosgxcawdxdyay/node_modules/@mui/material/MenuItem/MenuItem.js"),b=o("./node_modules/.pnpm/@mui+material@5.16.4_@emotion+react@11.13.0_@types+react@18.3.3_react@18.3.1__@emotion+styled_brxipnv4yvqheosgxcawdxdyay/node_modules/@mui/material/AppBar/AppBar.js");const g=o.p+"66ab77d47d3c81f5b5cf.svg";var h=o("./node_modules/.pnpm/@mui+material@5.16.4_@emotion+react@11.13.0_@types+react@18.3.3_react@18.3.1__@emotion+styled_brxipnv4yvqheosgxcawdxdyay/node_modules/@mui/material/Toolbar/Toolbar.js"),x=(0,i.Ay)("div")((function(e){var t,o=e.theme;return(t={padding:o.spacing(1),"& button":{color:o.palette.secondary.main}})[o.breakpoints.down("md")]={display:"grid",gridTemplateAreas:"'hamburger logo logo'"},t[o.breakpoints.up("md")]={display:"grid",gridTemplateAreas:"'logo logo logo'\n                        ' .  menulinks  . '"},t})),k=(0,i.Ay)("div")((function(e){var t,o=e.theme;return(t={gridArea:"logo"})[o.breakpoints.down("md")]={display:"none"},t[o.breakpoints.up("md")]={height:"5rem",width:"20rem",backgroundColor:o.palette.secondary.main,mask:"url('".concat(g,"') no-repeat center"),maskSize:"20rem",gridArea:"logo",justifySelf:"center"},t})),w=(0,i.Ay)(b.A)((function(e){return e.theme,{position:"relative"}})),j=(0,i.Ay)(h.A)((function(e){var t,o=e.theme;return(t={display:"flex"})[o.breakpoints.down("md")]={"&:before":{content:"''",backgroundColor:o.palette.secondary.main,mask:"url('".concat(g,"') no-repeat center"),maskSize:"10rem",justifyContent:"start",width:"10rem",height:"100%",position:"absolute",left:"calc(50vw - 5rem)"}},t[o.breakpoints.up("md")]={justifyContent:"center"},t})),E=function(){return a.createElement(k,null)},A={home:{value:"home",displayName:"Home"},aboutUs:{value:"about",displayName:"About Us"},workFlow:{value:"workflow",displayName:"Service Map"},catalog:{value:"catalog",displayName:"Product Catalog"}},C=o("./node_modules/.pnpm/@emotion+react@11.13.0_@types+react@18.3.3_react@18.3.1/node_modules/@emotion/react/dist/emotion-element-5486c51c.browser.esm.js"),O=Object.values(A);function q(){var e=a.useState(null),t=e[0],o=e[1],n=a.useState(null),r=(n[0],n[1],function(){o(null)}),l=(0,C.u)();return a.createElement(w,null,a.createElement(j,{disableGutters:!0},a.createElement(x,null,a.createElement(E,null),a.createElement(u.A,{sx:{flexGrow:0,display:{sm:"flex",md:"none",lg:"none"},gridArea:{md:"hamburger"}}},a.createElement(p.A,{size:"large","aria-label":"account of current user","aria-controls":"menu-appbar","aria-haspopup":"true",onClick:function(e){o(e.currentTarget)},color:"secondary"},a.createElement(_.A,null)),a.createElement(y.A,{id:"menu-appbar",anchorEl:t,anchorOrigin:{vertical:"bottom",horizontal:"left"},keepMounted:!0,transformOrigin:{vertical:"top",horizontal:"left"},open:Boolean(t),onClose:r,sx:{display:{md:"block",lg:"none"}}},O.map((function(e){return a.createElement(v.A,{key:e.value,onClick:r},a.createElement(f.A,{component:d.k2,to:e.value,key:e.value,onClick:r,sx:{my:2,color:l.palette.secondary.main,display:"block"}},e.displayName))})))),a.createElement(u.A,{sx:{flexGrow:1,display:{xs:"none",md:"flex",lg:"flex",justifyContent:"center"},gridArea:"menulinks"}},O.map((function(e){return a.createElement(f.A,{component:d.k2,to:e.value,key:e.value,onClick:r,sx:{my:2,color:l.palette.secondary.main,display:"block"}},e.displayName)}))))))}const S=function(){return a.createElement(a.Suspense,{fallback:"loading"},a.createElement("div",{style:{display:"flex"}},a.createElement(c.sv,null)))};var M=(0,d.Ys)([{path:"/",element:a.createElement((function(){return a.createElement("div",{style:{display:"flex",flexDirection:"column",alignItems:"center"}},a.createElement(q,null),a.createElement(a.Suspense,{fallback:"loading..."},a.createElement(S,null)))}),null),children:[{index:!0,element:a.createElement(c.C5,{to:A.home.value,replace:!0})},{path:A.aboutUs.value,Component:(0,a.lazy)((function(){return o.e(227).then(o.bind(o,"./src/pages/About/About.tsx"))}))},{path:A.home.value,element:a.createElement(c.C5,{to:A.home.value,replace:!0}),Component:(0,a.lazy)((function(){return o.e(328).then(o.bind(o,"./src/pages/Home/Home.tsx"))})),index:!0},{path:A.workFlow.value,Component:(0,a.lazy)((function(){return o.e(545).then(o.bind(o,"./src/pages/WorkFlow/WorkFlow.tsx"))}))},{path:A.catalog.value,Component:(0,a.lazy)((function(){return Promise.all([o.e(343),o.e(692)]).then(o.bind(o,"./src/pages/Catalog/Catalog.tsx"))}))},{path:"*",element:a.createElement(c.C5,{to:A.home.value,replace:!0})}]}],{basename:"/lala-land/"}),B=o("./node_modules/.pnpm/@mui+material@5.16.4_@emotion+react@11.13.0_@types+react@18.3.3_react@18.3.1__@emotion+styled_brxipnv4yvqheosgxcawdxdyay/node_modules/@mui/material/CssBaseline/CssBaseline.js"),P=document.querySelector("#root");(0,r.H)(P).render(a.createElement(a.StrictMode,null,a.createElement(n.A,{theme:s},a.createElement(B.Ay,null),a.createElement(d.pg,{router:M}))))}},l={};function i(e){var t=l[e];if(void 0!==t)return t.exports;var o=l[e]={exports:{}};return r[e].call(o.exports,o,o.exports,i),o.exports}i.m=r,e=[],i.O=(t,o,a,n)=>{if(!o){var r=1/0;for(d=0;d<e.length;d++){for(var[o,a,n]=e[d],l=!0,m=0;m<o.length;m++)(!1&n||r>=n)&&Object.keys(i.O).every((e=>i.O[e](o[m])))?o.splice(m--,1):(l=!1,n<r&&(r=n));if(l){e.splice(d--,1);var s=a();void 0!==s&&(t=s)}}return t}n=n||0;for(var d=e.length;d>0&&e[d-1][2]>n;d--)e[d]=e[d-1];e[d]=[o,a,n]},i.n=e=>{var t=e&&e.__esModule?()=>e.default:()=>e;return i.d(t,{a:t}),t},o=Object.getPrototypeOf?e=>Object.getPrototypeOf(e):e=>e.__proto__,i.t=function(e,a){if(1&a&&(e=this(e)),8&a)return e;if("object"==typeof e&&e){if(4&a&&e.__esModule)return e;if(16&a&&"function"==typeof e.then)return e}var n=Object.create(null);i.r(n);var r={};t=t||[null,o({}),o([]),o(o)];for(var l=2&a&&e;"object"==typeof l&&!~t.indexOf(l);l=o(l))Object.getOwnPropertyNames(l).forEach((t=>r[t]=()=>e[t]));return r.default=()=>e,i.d(n,r),n},i.d=(e,t)=>{for(var o in t)i.o(t,o)&&!i.o(e,o)&&Object.defineProperty(e,o,{enumerable:!0,get:t[o]})},i.f={},i.e=e=>Promise.all(Object.keys(i.f).reduce(((t,o)=>(i.f[o](e,t),t)),[])),i.u=e=>e+"."+{227:"58f5b5d60483f7a0fe80",328:"4bf71e12ca02dc61ccc9",343:"d93eeaecd83a61d52258",545:"18f0bfac01ca76c574cb",692:"9eb9105a9916dfe6784b"}[e]+".js",i.miniCssF=e=>{},i.o=(e,t)=>Object.prototype.hasOwnProperty.call(e,t),a={},n="lala-land-frontend:",i.l=(e,t,o,r)=>{if(a[e])a[e].push(t);else{var l,m;if(void 0!==o)for(var s=document.getElementsByTagName("script"),d=0;d<s.length;d++){var c=s[d];if(c.getAttribute("src")==e||c.getAttribute("data-webpack")==n+o){l=c;break}}l||(m=!0,(l=document.createElement("script")).charset="utf-8",l.timeout=120,i.nc&&l.setAttribute("nonce",i.nc),l.setAttribute("data-webpack",n+o),l.src=e),a[e]=[t];var u=(t,o)=>{l.onerror=l.onload=null,clearTimeout(p);var n=a[e];if(delete a[e],l.parentNode&&l.parentNode.removeChild(l),n&&n.forEach((e=>e(o))),t)return t(o)},p=setTimeout(u.bind(null,void 0,{type:"timeout",target:l}),12e4);l.onerror=u.bind(null,l.onerror),l.onload=u.bind(null,l.onload),m&&document.head.appendChild(l)}},i.r=e=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},i.p="/lala-land/",(()=>{var e={792:0};i.f.j=(t,o)=>{var a=i.o(e,t)?e[t]:void 0;if(0!==a)if(a)o.push(a[2]);else{var n=new Promise(((o,n)=>a=e[t]=[o,n]));o.push(a[2]=n);var r=i.p+i.u(t),l=new Error;i.l(r,(o=>{if(i.o(e,t)&&(0!==(a=e[t])&&(e[t]=void 0),a)){var n=o&&("load"===o.type?"missing":o.type),r=o&&o.target&&o.target.src;l.message="Loading chunk "+t+" failed.\n("+n+": "+r+")",l.name="ChunkLoadError",l.type=n,l.request=r,a[1](l)}}),"chunk-"+t,t)}},i.O.j=t=>0===e[t];var t=(t,o)=>{var a,n,[r,l,m]=o,s=0;if(r.some((t=>0!==e[t]))){for(a in l)i.o(l,a)&&(i.m[a]=l[a]);if(m)var d=m(i)}for(t&&t(o);s<r.length;s++)n=r[s],i.o(e,n)&&e[n]&&e[n][0](),e[n]=0;return i.O(d)},o=self.webpackChunklala_land_frontend=self.webpackChunklala_land_frontend||[];o.forEach(t.bind(null,0)),o.push=t.bind(null,o.push.bind(o))})();var m=i.O(void 0,[354],(()=>i("./src/index.tsx")));m=i.O(m)})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,