(()=>{"use strict";var e,t,n,r,a,o={"./src/index.tsx":(e,t,n)=>{var r=n("./node_modules/react/index.js"),a=n("./node_modules/@mui/material/styles/ThemeProvider.js"),o=n("./node_modules/react-dom/client.js"),l=n("./node_modules/@mui/material/Checkbox/Checkbox.js"),i=n("./node_modules/@mui/material/styles/styled.js"),u=n("./node_modules/@mui/material/styles/createTheme.js"),s=((0,i.Ay)(l.A)((function(e){var t=e.theme;return{color:t.status.danger,"&.Mui-checked":{color:t.status.danger}}})),(0,u.A)({palette:{primary:{main:"#cffdff"},secondary:{main:"#001c43"}}})),c=n("./node_modules/react-router-dom/dist/index.js"),m=n("./node_modules/react-router/dist/index.js"),d=n("./node_modules/@mui/material/Box/Box.js"),p=n("./node_modules/@mui/material/IconButton/IconButton.js"),f=n("./node_modules/@mui/material/Menu/Menu.js"),b=n("./node_modules/@mui/icons-material/Menu.js"),v=n("./node_modules/@mui/material/Button/Button.js"),y=n("./node_modules/@mui/material/MenuItem/MenuItem.js"),g=n("./node_modules/@mui/material/AppBar/AppBar.js");const h=n.p+"66ab77d47d3c81f5b5cf.svg";var k=n("./node_modules/@mui/material/Toolbar/Toolbar.js"),j=(0,i.Ay)("div")((function(e){var t,n=e.theme;return(t={padding:n.spacing(1),"& button":{color:n.palette.secondary.main}})[n.breakpoints.down("md")]={display:"grid",gridTemplateAreas:"'hamburger logo logo'"},t[n.breakpoints.up("md")]={display:"grid",gridTemplateAreas:"'logo logo logo'\n                        ' .  menulinks  . '"},t})),x=(0,i.Ay)("div")((function(e){var t,n=e.theme;return(t={gridArea:"logo"})[n.breakpoints.down("md")]={display:"none"},t[n.breakpoints.up("md")]={height:"5rem",width:"20rem",backgroundColor:n.palette.secondary.main,mask:"url('".concat(h,"') no-repeat center"),maskSize:"20rem",gridArea:"logo",justifySelf:"center"},t})),E=(0,i.Ay)(g.A)((function(e){return e.theme,{position:"relative"}})),A=(0,i.Ay)(k.A)((function(e){var t,n=e.theme;return(t={display:"flex"})[n.breakpoints.down("md")]={"&:before":{content:"''",backgroundColor:n.palette.secondary.main,mask:"url('".concat(h,"') no-repeat center"),maskSize:"10rem",justifyContent:"start",width:"10rem",height:"100%",position:"absolute",left:"calc(50vw - 5rem)"}},t[n.breakpoints.up("md")]={justifyContent:"center"},t})),_=function(){return r.createElement(x,null)},C={home:{value:"home",displayName:"Home"},aboutUs:{value:"about",displayName:"About Us"},workFlow:{value:"workflow",displayName:"Service Map"},catalog:{value:"catalog",displayName:"Product Catalog"}},w=n("./node_modules/@emotion/react/dist/emotion-element-5486c51c.browser.esm.js"),O=Object.values(C);function S(){var e=r.useState(null),t=e[0],n=e[1],a=r.useState(null),o=(a[0],a[1],function(){n(null)}),l=(0,w.u)();return r.createElement(E,null,r.createElement(A,{disableGutters:!0},r.createElement(j,null,r.createElement(_,null),r.createElement(d.A,{sx:{flexGrow:0,display:{sm:"flex",md:"none",lg:"none"},gridArea:{md:"hamburger"}}},r.createElement(p.A,{size:"large","aria-label":"account of current user","aria-controls":"menu-appbar","aria-haspopup":"true",onClick:function(e){n(e.currentTarget)},color:"secondary"},r.createElement(b.A,null)),r.createElement(f.A,{id:"menu-appbar",anchorEl:t,anchorOrigin:{vertical:"bottom",horizontal:"left"},keepMounted:!0,transformOrigin:{vertical:"top",horizontal:"left"},open:Boolean(t),onClose:o,sx:{display:{md:"block",lg:"none"}}},O.map((function(e){return r.createElement(y.A,{key:e.value,onClick:o},r.createElement(v.A,{component:c.k2,to:e.value,key:e.value,onClick:o,sx:{my:2,color:l.palette.secondary.main,display:"block"}},e.displayName))})))),r.createElement(d.A,{sx:{flexGrow:1,display:{xs:"none",md:"flex",lg:"flex",justifyContent:"center"},gridArea:"menulinks"}},O.map((function(e){return r.createElement(v.A,{component:c.k2,to:e.value,key:e.value,onClick:o,sx:{my:2,color:l.palette.secondary.main,display:"block"}},e.displayName)}))))))}const M=function(){return r.createElement(r.Suspense,{fallback:"loading"},r.createElement("div",{style:{display:"flex"}},r.createElement(m.sv,null)))};var B=(0,c.Ys)([{path:"/",element:r.createElement((function(){return r.createElement("div",{style:{display:"flex",flexDirection:"column",alignItems:"center"}},r.createElement(S,null),r.createElement(r.Suspense,{fallback:"loading..."},r.createElement(M,null)))}),null),children:[{index:!0,element:r.createElement(m.C5,{to:C.home.value,replace:!0})},{path:C.aboutUs.value,Component:(0,r.lazy)((function(){return n.e(616).then(n.bind(n,"./src/pages/About/About.tsx"))}))},{path:C.home.value,element:r.createElement(m.C5,{to:C.home.value,replace:!0}),Component:(0,r.lazy)((function(){return n.e(410).then(n.bind(n,"./src/pages/Home/Home.tsx"))})),index:!0},{path:C.workFlow.value,Component:(0,r.lazy)((function(){return n.e(677).then(n.bind(n,"./src/pages/WorkFlow/WorkFlow.tsx"))}))},{path:C.catalog.value,Component:(0,r.lazy)((function(){return Promise.all([n.e(143),n.e(596)]).then(n.bind(n,"./src/pages/Catalog/Catalog.tsx"))}))},{path:"*",element:r.createElement(m.C5,{to:C.home.value,replace:!0})}]}],{basename:"/lala-land/"}),P=n("./node_modules/@mui/material/CssBaseline/CssBaseline.js"),T=document.querySelector("#root");(0,o.H)(T).render(r.createElement(r.StrictMode,null,r.createElement(a.A,{theme:s},r.createElement(P.Ay,null),r.createElement(c.pg,{router:B}))))}},l={};function i(e){var t=l[e];if(void 0!==t)return t.exports;var n=l[e]={exports:{}};return o[e].call(n.exports,n,n.exports,i),n.exports}i.m=o,e=[],i.O=(t,n,r,a)=>{if(!n){var o=1/0;for(c=0;c<e.length;c++){for(var[n,r,a]=e[c],l=!0,u=0;u<n.length;u++)(!1&a||o>=a)&&Object.keys(i.O).every((e=>i.O[e](n[u])))?n.splice(u--,1):(l=!1,a<o&&(o=a));if(l){e.splice(c--,1);var s=r();void 0!==s&&(t=s)}}return t}a=a||0;for(var c=e.length;c>0&&e[c-1][2]>a;c--)e[c]=e[c-1];e[c]=[n,r,a]},i.n=e=>{var t=e&&e.__esModule?()=>e.default:()=>e;return i.d(t,{a:t}),t},n=Object.getPrototypeOf?e=>Object.getPrototypeOf(e):e=>e.__proto__,i.t=function(e,r){if(1&r&&(e=this(e)),8&r)return e;if("object"==typeof e&&e){if(4&r&&e.__esModule)return e;if(16&r&&"function"==typeof e.then)return e}var a=Object.create(null);i.r(a);var o={};t=t||[null,n({}),n([]),n(n)];for(var l=2&r&&e;"object"==typeof l&&!~t.indexOf(l);l=n(l))Object.getOwnPropertyNames(l).forEach((t=>o[t]=()=>e[t]));return o.default=()=>e,i.d(a,o),a},i.d=(e,t)=>{for(var n in t)i.o(t,n)&&!i.o(e,n)&&Object.defineProperty(e,n,{enumerable:!0,get:t[n]})},i.f={},i.e=e=>Promise.all(Object.keys(i.f).reduce(((t,n)=>(i.f[n](e,t),t)),[])),i.u=e=>e+"."+{143:"cf5ba1c52beb82f36e8a",410:"2de14a99d7b2a1e937af",596:"2c521851f1c652415cde",616:"b38d82e7d644f7f86908",677:"89eeb6288f632c850ad2"}[e]+".js",i.miniCssF=e=>{},i.o=(e,t)=>Object.prototype.hasOwnProperty.call(e,t),r={},a="lala-land-frontend:",i.l=(e,t,n,o)=>{if(r[e])r[e].push(t);else{var l,u;if(void 0!==n)for(var s=document.getElementsByTagName("script"),c=0;c<s.length;c++){var m=s[c];if(m.getAttribute("src")==e||m.getAttribute("data-webpack")==a+n){l=m;break}}l||(u=!0,(l=document.createElement("script")).charset="utf-8",l.timeout=120,i.nc&&l.setAttribute("nonce",i.nc),l.setAttribute("data-webpack",a+n),l.src=e),r[e]=[t];var d=(t,n)=>{l.onerror=l.onload=null,clearTimeout(p);var a=r[e];if(delete r[e],l.parentNode&&l.parentNode.removeChild(l),a&&a.forEach((e=>e(n))),t)return t(n)},p=setTimeout(d.bind(null,void 0,{type:"timeout",target:l}),12e4);l.onerror=d.bind(null,l.onerror),l.onload=d.bind(null,l.onload),u&&document.head.appendChild(l)}},i.r=e=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},i.p="lala-land/",(()=>{var e={792:0};i.f.j=(t,n)=>{var r=i.o(e,t)?e[t]:void 0;if(0!==r)if(r)n.push(r[2]);else{var a=new Promise(((n,a)=>r=e[t]=[n,a]));n.push(r[2]=a);var o=i.p+i.u(t),l=new Error;i.l(o,(n=>{if(i.o(e,t)&&(0!==(r=e[t])&&(e[t]=void 0),r)){var a=n&&("load"===n.type?"missing":n.type),o=n&&n.target&&n.target.src;l.message="Loading chunk "+t+" failed.\n("+a+": "+o+")",l.name="ChunkLoadError",l.type=a,l.request=o,r[1](l)}}),"chunk-"+t,t)}},i.O.j=t=>0===e[t];var t=(t,n)=>{var r,a,[o,l,u]=n,s=0;if(o.some((t=>0!==e[t]))){for(r in l)i.o(l,r)&&(i.m[r]=l[r]);if(u)var c=u(i)}for(t&&t(n);s<o.length;s++)a=o[s],i.o(e,a)&&e[a]&&e[a][0](),e[a]=0;return i.O(c)},n=self.webpackChunklala_land_frontend=self.webpackChunklala_land_frontend||[];n.forEach(t.bind(null,0)),n.push=t.bind(null,n.push.bind(n))})();var u=i.O(void 0,[515],(()=>i("./src/index.tsx")));u=i.O(u)})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,